package day10;

import java.util.*;

public class Test04 {
/*
	추상클래스
		: 	추상 함수를 0개 이상 가지고 있는 클래스
			즉, 추상 함수가 없어도 강제로 추상 클래스를 만들수 있고
			추상 함수가 한개라도 있으면 반드시 추상 클래스로 만들어야 한다.
			
		추상함수
			: 	함수의 몸체( {} )가 없는 함수를 추상함수라 한다.
				이름이나 매개변수리스트 그리고 반환값은 있지만
				함수에 몸체가 아직 만들어지지 않은 함수
				
			형식]
				
				[접근지정자] abstract 반환값 함수이름(매개변수리스트);
				
				예]
					public abstract void abc(int no);
				
				
	추상클래스 만드는 방법 ]
		
		형식]
			[접근지정자] abstract class 클래스이름 {
				변수
				일반함수
				추상함수 - 0개이상
			}
			
			
	이유는??
		==> 다형성 구현을 위해서...
	====================================================================
	추상 클래스 사용하는 방법
		==> 추상클래스는 스스로 new 시킬 수 없다.
			왜냐하면 멤버중 기능이 없는 함수가 존재할 수 있기 때문에...
			
		1. 다른 클래스에서 상속 받아서
			추상함수의 기능을 구현하고(오버라이드)
			상속받은 정상적인 클래스를 new 시키면 된다.
			==> 실무에서 이렇게 사용하는 경우는 10%
			
		2. 	추상 클래스 안에는 
			속성이 static 이면서 반환값이 자기자신인 함수가 존재한다.
			
			
	===================================================================
	
	추상클래스가 아님에도 불구하고
	생성자 함수가 없는 클래스가 있다.
	이 경우는 생성자함수의 접근지정자를 private 으로 정의해 놓은 경우다.
	이경우 클래스 외부에서는 
	이 클래스의 생성자함수에 접근할 방법이 없으므로
	역시 new 명령을 사용할 수 없다.
	
	이런 클래스 역시
	속성이 static이면서 반환값이 자기자신인 함수를 찾아서 호출하면 된다.
			
 */
	public Test04() {
//		Calendar cal = new Calendar(); // ==> 추상클래스는 스스로 new 시킬 수 없다.
		Calendar cal = Calendar.getInstance();
	}

	public static void main(String[] args) {
		new Test04();
	}

}
