package day06;
/*
	객체지향언어(Object oriented Programming)
		==> 클래스를 이용해서 프로그램을 만들어 나가는 언어
			:자바스크립트, 파이썬, ....
		클래스 란???
			==>하나의 목적을 달성하기 위해서 필요한 기능과 속성을 모아놓은 프로그램의 단위
			예]
				문자열 관리(String), 네트워크(Socket), 데이터관리(ArrayList)...
		클래스의 구성요소는 
			1. 변수 - 속성이라고 이야기하며 필요한 데이터를 보관하고 있는 기능
			2. 함수(Method) - 기능이라 표현하고 뭔가를 해결하기 위한 기능을 가지고 있다.
			클래스의 구성요소는 
				변수와 함수인데 
			이 두개를 멤버(Member)라 부른다.
			여기서 멤버변수를 다른말로 field 라고 표현한다.
	==========================================================
	
	클래스 만드는 방법
		형식]
			[접근지정자][속성] class클래스이름{
				멤버들...(변수,함수)
			}
			확인]
				클래스 이름 만드는 규칙
					1. 대문자로 시작한다.
					2. 한글도 사용가능하지만 되도록이면 사용하지 않는다.
					3. 특수문자도 올 수 있지만, $만 올 수 있다.
					4. 첫글자로 숫자가 오면 절대 안된다.
			접근지정자] 
				종류]
					1. public
						-모든곳에서
					2. protected
						-같은패키지 내에서, 다른패키지라도 상속을 받은 경우
					3. 생략
						-같은패키지 내에서만
					4. private
						-같은클래스 내에서만
					클래스 작성할때 사용가능한 접근지정자
						1. public
						2. 생략
						2,4는 
			하나의 자바파일에 클래스가 여러개 있는경우
			public 접근지정자는 한 파일에 하나만 가능하다.
	================================================================
	
	클래스는 작성되면 파일로 저장되고 이 클래스는 단지 설계도에 불과하다.
	(파일로 저장된 것이 자동으로 메모리에 올려지지는 않기때문에...)
	따라서 실행도  이 상태로는 안된다.
	
	이것을 실행 가능한 상태로 만든 것이 객체이다.
	
	결론적으로 객체지향언어는
	클래스를 기반으로 해서 만들어진 Object(객체)에 의해서 만들어지는 프로그램이다.
	
	객체는 어덯게 만들지?
		객체는 JVM이 만들어준다.
		다만 개발자는 필요한 부품(객체)을 만들어 달라고 명령만 내리면 된다.
		형식]
			클래스이름 변수;  //변수선언
			변수 = new 클래스이름(); //변수초기화
			or 
			클래스이름 변수 = new 클래스이름();
		
		이렇게 heap에 만들어진 클래스를 instance라 부르고
		이 instance를 저장할 변수를 reference라 부른다.
		
		**그리고 이 instance와 reference를 합쳐서 object라 한다.**
	=======================================================================
	
	객체의 사용방법
		==> 객체를 사용한다는 것은
			그 목적을 달성하기 위해서 필요한 데이터를 기억하거나
			또는 필요한 기능을 이용하는 것
			
		
 */
public class Test04 {

	public Test04() {
		Test t; 
		// 변수 선언 - 타입은 Test이고 변수이름은 t이다. 
		// 이 클래스는 기본형 타입이 아니므로 참조형 타입이다.
		t = new Test(3); 
		// t = new Test();
		// 변수 초기화
		// Test 클래스내에서 기본 생성자함수를 따로 만들지 않으면 에러가 난다.
		// 내가 임의로 매개변수가 있는 생성자 함수를 만들었기 때문에 
		// JVM이 기본 생성자함수를 만들지 않는다
	}
	public static void main(String[] args) {
		new Test04();
	}
	
}

class Test{
	int no;
	
	//public Test() {}
	public Test(int no) {
		this.no = no;
	}
}